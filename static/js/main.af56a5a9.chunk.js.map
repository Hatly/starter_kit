{"version":3,"sources":["components/Navbar.js","components/BuyForm.js","components/SellForm.js","components/Main.js","components/App.js","serviceWorker.js","index.js","token-logo.png","eth-logo.png"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","width","height","src","concat","Identicon","toString","alt","Component","BuyForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","output","_this2","onSubmit","event","etherAmount","preventDefault","input","value","window","web3","utils","toWei","buyTokens","fromWei","ethBalance","type","onChange","console","log","setState","ref","placeholder","required","ethLogo","tokenBalance","disabled","tokenLogo","SellForm","sellTokens","tokenAmount","Main","currentForm","content","components_BuyForm","components_SellForm","onClick","App","loading","ethSwap","methods","send","from","on","hash","token","approve","address","accounts","loadWeb3","loadBlockchainData","eth","getAccounts","getBalance","net","getId","networkId","tokenData","Token","networks","Contract","abi","balanceOf","alert","ethSwapData","EthSwap","ethereum","Web3","enable","currentProvider","components_Main","components_Navbar","role","style","maxWidth","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.af56a5a9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Identicon from 'identicon.js';\r\n\r\nclass Navbar extends Component {\r\n  \r\n  render() {\r\n    return (\r\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n                <a\r\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n                    href=\"http://www.dappuniversity.com/bootcamp\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    EthSwap\r\n                </a>\r\n                <ul className=\"navbar-nav px-3\">\r\n                    <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n                        <small className=\"text-secondary\">\r\n                            <small id=\"account\">{this.props.account}</small>\r\n                        </small>\r\n\r\n                        { this.props.account\r\n                            ? <img\r\n                                className=\"ml-2\"\r\n                                width='30'\r\n                                height='30'\r\n                                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n                                alt=\"\"\r\n                            />\r\n                            : <span></span>\r\n                        }\r\n\r\n                    </li>\r\n\r\n                  \r\n\r\n                </ul>\r\n\r\n                </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\r\nimport tokenLogo from '../token-logo.png'\r\nimport ethLogo from '../eth-logo.png'\r\n\r\n\r\n\r\nclass BuyForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      output: '0'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <form className=\"mb-3\" onSubmit={(event) => {\r\n            event.preventDefault()\r\n            let etherAmount\r\n            etherAmount = this.input.value.toString()\r\n            etherAmount = window.web3.utils.toWei(etherAmount, 'Ether')\r\n            this.props.buyTokens(etherAmount)\r\n        }}>\r\n            <div>\r\n            <label className=\"float-left\"><b>Input</b></label>\r\n            <span className=\"float-right text-muted\">\r\n                Balance: {window.web3.utils.fromWei(this.props.ethBalance, 'Ether')}\r\n            </span>\r\n            </div>\r\n            <div className=\"input-group mb-4\">\r\n            <input\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                console.log(\"changing...\")\r\n                const etherAmount = this.input.value.toString()\r\n                this.setState({\r\n                    output: etherAmount * 100\r\n                })\r\n                }}\r\n                ref={(input) => { this.input = input }}\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"0\"\r\n                required />\r\n            <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                <img src={ethLogo} height='32' alt=\"\"/>\r\n                    &nbsp;  ETH\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"float-left\"><b>Output</b></label>\r\n            <span className=\"float-right text-muted\">\r\n                Balance: {window.web3.utils.fromWei(this.props.tokenBalance, 'Ether')}\r\n            </span>\r\n            </div>\r\n            <div className=\"input-group mb-2\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"0\"\r\n                value={this.state.output}\r\n                disabled\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                <img src={tokenLogo} height='32' alt=\"\"/>\r\n                &nbsp; HAT\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"mb-5\">\r\n            <span className=\"float-left text-muted\">Exchange Rate</span>\r\n            <span className=\"float-right text-muted\">1 ETH = 100 HAT</span>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">SWAP!</button>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyForm;\r\n","import React, { Component } from 'react'\r\nimport tokenLogo from '../token-logo.png'\r\nimport ethLogo from '../eth-logo.png'\r\n\r\n\r\n\r\nclass SellForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      output: '0'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <form className=\"mb-3\" onSubmit={(event) => {\r\n            event.preventDefault()\r\n            let etherAmount\r\n            etherAmount = this.input.value.toString()\r\n            etherAmount = window.web3.utils.toWei(etherAmount, 'Ether')\r\n            this.props.sellTokens(etherAmount)\r\n        }}>\r\n            <div>\r\n                <label className=\"float-left\"><b>Input</b></label>\r\n                <span className=\"float-right text-muted\">\r\n                    Balance: {window.web3.utils.fromWei(this.props.tokenBalance, 'Ether')}\r\n                </span>\r\n            </div>\r\n            <div className=\"input-group mb-4\">\r\n            <input\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                    const tokenAmount = this.input.value.toString()\r\n                    this.setState({\r\n                        output: tokenAmount / 100\r\n                    })\r\n                }}\r\n                ref={(input) => { this.input = input }}\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"0\"\r\n                required />\r\n            <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                <img src={tokenLogo} height='32' alt=\"\"/>\r\n                    &nbsp;  HAT\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n            <label className=\"float-left\"><b>Output</b></label>\r\n            <span className=\"float-right text-muted\">\r\n                Balance: {window.web3.utils.fromWei(this.props.ethBalance, 'Ether')}\r\n            </span>\r\n            </div>\r\n            <div className=\"input-group mb-2\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"0\"\r\n                value={this.state.output}\r\n                disabled\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <div className=\"input-group-text\">\r\n                <img src={ethLogo} height='32' alt=\"\"/>\r\n                &nbsp; ETH\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"mb-5\">\r\n            <span className=\"float-left text-muted\">Exchange Rate</span>\r\n            <span className=\"float-right text-muted\">100 HAT = 1 ETH</span>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">SWAP!</button>\r\n        </form>\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default SellForm;\r\n","import React, { Component } from 'react'\r\nimport BuyForm from './BuyForm'\r\nimport SellForm from './SellForm'\r\n\r\n\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentForm: 'buy'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let content\r\n    if(this.state.currentForm === 'buy') {\r\n      content = <BuyForm \r\n        ethBalance={this.props.ethBalance}\r\n        tokenBalance={this.props.tokenBalance}\r\n        buyTokens={this.props.buyTokens}\r\n      />\r\n    } else {\r\n      content = <SellForm \r\n        ethBalance={this.props.ethBalance}\r\n        tokenBalance={this.props.tokenBalance}\r\n        sellTokens={this.props.sellTokens}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <div id=\"content\" className=\"mt-3\">\r\n\r\n        <div className=\"d-flex justify-content-between mb-3\">\r\n          <button \r\n              className=\"btn btn-light\"\r\n              onClick={(event) => {\r\n                this.setState({ currentForm: 'buy' })\r\n              }}\r\n              \r\n            >\r\n            Buy\r\n          </button>\r\n          <span className=\"text-muted\">&lt; &nbsp; &gt;</span>\r\n          <button \r\n              className=\"btn btn-light\"\r\n              onClick={(event) => {\r\n                this.setState({ currentForm: 'sell' })\r\n              }}\r\n              \r\n            >\r\n            Sell\r\n          </button>         \r\n        </div>\r\n\r\n        <div className=\"card mb-4\" >\r\n\r\n          <div className=\"card-body\">\r\n            {content}\r\n          \r\n            \r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport Token from '../abis/Token.json'\r\nimport EthSwap from '../abis/EthSwap.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  \r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n   \r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n\r\n    const ethBalance = await web3.eth.getBalance(this.state.account)\r\n    this.setState({ ethBalance })\r\n\r\n    // load token\r\n    const networkId = await web3.eth.net.getId()\r\n    const tokenData = Token.networks[networkId]\r\n    if(tokenData) {\r\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\r\n      this.setState({ token })\r\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\r\n      this.setState({ tokenBalance: tokenBalance.toString()})\r\n    } else {\r\n      window.alert('Token contract not deployed to detected network.')\r\n    }\r\n\r\n     // load EthSwap\r\n     const ethSwapData = EthSwap.networks[networkId]\r\n     if(ethSwapData) {\r\n       const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address)\r\n       this.setState({ ethSwap })\r\n     } else {\r\n       window.alert('EthSwap contract not deployed to detected network.')\r\n     }\r\n      this.setState({ loading:false })\r\n\r\n\r\n  }\r\n    async loadWeb3() {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum)\r\n        await window.ethereum.enable()\r\n      }\r\n      else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider)\r\n      }\r\n      else  {\r\n        window.alert('Non-Ethereum browser detected. you should consider trying Metamask!')\r\n      }  \r\n    }\r\n\r\n    buyTokens = (etherAmount) => {\r\n      this.setState({ loading: true })\r\n      this.state.ethSwap.methods.buyTokens().send({ value: etherAmount, from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: false })\r\n      })\r\n    }\r\n\r\n    sellTokens = (tokenAmount) => {\r\n      this.setState({ loading: true })\r\n      this.state.token.methods.approve(this.state.ethSwap.address, tokenAmount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.state.ethSwap.methods.sellTokens(tokenAmount).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n          this.setState({ loading: false })\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          accounts: '',\r\n          token: {},\r\n          ethSwap: {},\r\n          ethBalance: '0',\r\n          tokenBalance: '0',\r\n          loading: true\r\n\r\n      }\r\n    }\r\n\r\n    \r\n  render() {\r\n    let content\r\n    if(this.state.loading) {\r\n      content = <p id=\"loader\" className=\"text-center\">Loading...</p>\r\n\r\n    } else {\r\n      content = <Main \r\n        ethBalance={this.state.ethBalance}\r\n        tokenBalance={this.state.tokenBalance}\r\n        buyTokens={this.buyTokens}\r\n        sellTokens={this.sellTokens}\r\n\r\n      />\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px'}}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n                {content}\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/token-logo.8a6ae557.png\";","module.exports = __webpack_public_path__ + \"static/media/eth-logo.616af379.png\";"],"sourceRoot":""}